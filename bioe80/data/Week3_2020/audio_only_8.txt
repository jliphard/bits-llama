WEEK 3 WEDNESDAY LECTURE 8

Has anybody has anybody found something as exciting as what the young people all over the world are finding with these pocket microscopes? It's so interesting to me how it changes the perception of a microscope. Normally you think of a microscope as this precious, expensive piece of laboratory equipment that's almost sacred because of how much it costs. But these things you could use as a bookmark. These things you could put on the ground and stomp on it, accidentally or on purpose. It would probably still work. You can take it with you. So it's sort of like, you know, the cameras are now parts of the phone, oftentimes, right? And so the fact that you have a camera with you means that you use the camera. You all now hopefully have a microscope with you, which means that no matter where you are, you can see microscopic things. Yeah, yeah. Yeah, go ahead, Subash. That Yash said that they looked at the microbes in their in their pool. And yeah, you can see a lot of micro swimmers in standing like water with voltscope. They work very well for that. Yash, were they swimming or were they static, just subject to currents? Any idea? I think my mom had just put chlorine in the pool, so they were not swimming. They seemed to have been dead. Great.

What's the magnification of the foldscope? Does anybody know? How small an object can you see on your origami microscope? About 150 times the size.

So something that would normally take up about a centimeter in your vision, you can now see, I guess, like 10 millimeters. I mean 10, I'm not doing math right, pardon. 10 microns, John? Okay, so two micron resolution, one to 10 micron resolution. So, an E. coli is gonna be about a micron, a yeast is gonna be about four microns, paramecium could be a little bit bigger. Cool.

Great, so there's more to explore with the foldscope that'll show up in the PSET coming out on Friday. Let's jump into, if you can think of a microscope as a measurement tool, and you've now been introduced and have a measurement tool. Today, we're going to pick up on analysis and design tools and introduction to analysis and design tools in bioengineering. Today, we'll focus on molecules, biomolecules, and then Friday we'll focus on systems, genetic systems. So the way today is going to go is I'm going to cover some DNA molecule stuff. Then we'll have an exercise. If you can think ahead to the exercise and find a piece of paper, if you can grab a piece of scrap paper wherever you are, even two, that'll be helpful for the exercise. After the exercise, we'll move on to peptides and proteins, analysis and design of them, and some tools for that. And we'll close if we have time with a breakout regarding what tool properties you would wish for. So, if you're patient with me, I'll jump into screen share and off we go. Brianna, can you see that okay? Thank you. Analysis and design of biomolecules. So this is an amazing microscopic image of a very thin, tiny strand of DNA, hair-like, this is decades old, going through the middle of this image. And then you can see just barely the process of transcription and translation. So where that arrow is on the right is where the DNA is being bound by an RNA polymerase and read out to make messenger RNA. So transcription starts on the right and heads off to the left. So it looks like maybe you can see an RNA polymerase molecule binding and getting ready to go. As the polymerase goes from right to left, it makes the transcript, and the transcript is recognized by ribosomes, the molecules that take the information on an mRNA transcript and turn it into a peptide, a polymer of amino acids that folds into a protein. So right above where it says 0.5 microns, you can see some dark splotches. Those are ribosomes assembled, many ribosomes assembled on transcripts, and they're, as soon as the transcript is being made, the ribosomes are loading and beginning to make protein. And you can't see the protein here, if I remember correctly. So it's great to be able to see what it looks like if you can capture it on a microscope. But let's think about it more from an engineering perspective where we're gonna wanna eventually reprogram this stuff, change what's being read out, change what molecules are being made. So, yeah, promoter, transcription initiation, it's going to end off onto the left. So here is an information universe representation of a genome. a natural DNA sequence, meaning a sequence of DNA found in nature. This is for the biological system that it encodes, the entirety of the DNA sequence. So it's a relatively small DNA sequence. This is the genome of a virus, a virus of bacterium. And so when you take the physical object and you sequence it or read out the DNA, you get this abstracted information. That's not the real thing. It's a representation of the actual object, and it's these letters of A, T, C, and G.

And so how do we make sense of this?

And there's this wonderful quote from Eric Lander, who was one of the leaders of the public effort to sequence the human genome. He was asked to summarize the project in six or seven words. And he said, well, you know, bought the book, meaning we read out, we decoded all the letters that make up the human genome in this case, hard to read, hard to make sense of how this works. When you are confronted with this information, all you got, it's like, it'd be looking at a piece of software and you just get the zeros and ones in the compiled binary. You know, like it's hyper detailed. It's very hard to understand what's going on. So we need tools for analysis, whether you're a scientist, a discoverer, or a tinkerer, a maker, you need tools for analyzing these sequences. By the way, when we go to synthesize DNA, the equivalent statement from me is going to be, you know, can write DNA little to say. information into the printer is going to show up later. Practically, in words, analysis of biomolecules often starts as pattern recognition. We make models based on what we've already discovered about biology, and then we use those models to define patterns. And then we use computers to try and find matches to the patterns. Sometimes we're informed by biochemical mechanics. Sometimes we're just looking for patterns.

So here's an example.

What's shown here is the table of genetic code. The DNA, when it goes to RNA and then protein, is gonna be decoded in what are called triplets or triplet codons, and you see here different triplets, combination of letters, this is representing the triplets as if they were on RNA, not DNA. So in DNA it would be a T instead of a U, which is shown here. So RNA uses U instead of T. So we've got A, C, U, and G. And depending on what triplet one encounters on the RNA, a different amino acid is going to be specified during protein synthesis as mediated by the ribosome. So for example, in red, you see the triplet AUG towards the bottom left, and that specifies the amino acid methionine. On the top right, you can see three different triplets, UAA, UGA, UAG, and those specify stop signals. When protein synthesis machinery, the ribosome encounters one of those triplets, it should stop making the protein. The red methionine, although it's called methionine, it's also a start signal. Protein synthesis should start there. So this is going to allow us to create a model for what a type of pattern is on a piece of DNA that gets read out into RNA. It's going to be called an open reading frame. It is a section of DNA that is read out by the ribosome and turned into a protein. And it starts with an AUG, and then it samples from this table of triplets, however is needed, and it ends with one of those three-stop codons.

This is an overwhelming image, but it gives you a lot of information, if you want to think about this from a physics perspective and a chemistry perspective, there's something amazing here that John did a super nice job in the tutorial on Sunday. What's going on here is you're taking a linear polymer, a thread like DNA and RNA, and somehow that is being converted, which is basically a storage of information system, that linear polymer, and that's being converted into a framework that allows you to create three-dimensional objects, the folded-up protein, which is organizing atoms in three-dimensional space. So the significance of this lookup table is it's taking this linear triplet, the codon on the left, and it's coupling it to an amino acid, hisidine, lysine, and so on. And this table, this colorful plot on the right, rather, shows you how you go out the triplets from the first, second, third, as you go out the wheel to the amino acid, and then what the amino acid side chains are, that chemical structure, which is literally how the atoms are organized off the polypeptide backbone when you get a folded up protein. We'll come back and see more of this. I just want to hit you with this coupling of single-dimensional information polymers to what becomes a three-dimensional structuring of atoms. That's at the heart of biology and what makes it not just information science, but physical science and chemical science.

We now have a pattern for a type of function that we can identify when we do analysis of biomolecules, genetic molecules. The pattern here is an open reading frame, a section of the molecule that makes a codes for a protein, starts with an AUG and then goes until there's a stop, in this case, a UAA. So, anywhere we would find an AUG and then going into a UAA, we're going to say, oh, that could be an open reading. If we go back to the sequence I was showing you from before, highlighted in bold, starting at the bottom, you can see that that darker lettering and a green ATG about 10 lines up from the bottom. Hopefully, Brianna, can you see that? Thank you. That's the start code on for an open reading frame, and it just goes and goes and goes because there's no stop code on. It just keeps going, go, go, go. Goes all the way to the bottom, wraps around, goes across the top line, and then in this natural sequence, ends at a TGA, which would be a UGA on the DNA. So that's an open reading frame. How do we know that? Because we've got this model for open reading frames. Start with an ATG and end with a TGA, TAA, or TAG.

Here's something strange.

Starting three lines from the bottom is another ATG, and it goes around and ends at a TGA in the middle of the top row. This is a wraparound sequence, so in reality it's a circle. So there's no real breakpoint. What's strange about this open reading frame is it's inside the first one I was telling you about. How could an open reading frame be inside another open reading frame? And this is a nuance of the triplet nature of the code because it's decoded in triplets, you can start at any register, the register defined by the first A-ATG, or if you shift over one, you can have a totally different protein in the same real estate, in the same sequence of DNA. If you've never thought about that before and are excited about it, that's an expert-level topic, but just to give you a taste of that, because I presume some of you have heard about open reading frames and translation. So I just want to give those of you who are higher level that teaser. Now, here's a problem. When you just use this model for analysis of a sequence, hopefully you get what's shown on the left, because this is what the biologists tell us is true. These are actually the open reading frames on this natural sequence of DNA that are actually turned into proteins to make the virus. But if you just apply that pattern recognition tool, what you get is the map shown on the right, where each bar or arrow is a different, totally valid open reading frame that starts with a start codon, AUG, and ends with a stop codon. It is very hard to make sense of this. On the left, there's about 11 of these open reading frames that everybody agrees exist, but the computer, the analysis tool on the right would tell you there's several hundred. That's hard to make sense of. And as an aside, since we're talking about tools and so on, I just wanna grab the... link off the bottom of that page. And, Brianna, can you see the page loading here, the web page? Is that a yes?

Thanks.

So, what I've done is I've grabbed the link off the bottom of the slide and loaded that up, and this is an example of a tool, it's a web browser based tool called BenchLink that was started by some students long ago out of MIT, and it's a sequence analysis tool that then feeds into a sequence design tool. So if you've never seen actual tools for analysis and design of sequences, I can point you to BenchLink as one example of a first, second order type of visual word processor for DNA sequence analysis and design. Let me pop back in to the slide deck. So another thing I'd hit you with is these tools we have for analysis by themselves are often insufficient because they don't capture the subtleties of how biology actually works. They just give you whatever the tool can do as an analysis tool.

And the reason it's hard for the tools is. The tools are struggling to represent what's actually happening in terms of the physics of the biology, the physics of living matter, and. Just because you think you have a perfect genetic code model for a perfect open reading frame model.

The molecules that make up biology don't know that those are our models. In fact, they don't care what we know. They're just molecules doing their molecule business. This is a movie we made with colleagues up at Autodesk to show a ribosome binding on a nucleic acid sequence. And what this should give you a sense of is, you know, there's no hand of God that is purposely insisting on exactly the right thing happening. This is all being mediated by physical forces that are oftentimes very subtle and weak. So, for example, if you look at the patterns of stark codons and where the ribosome binds upstream of a stark codon across all known valid protein coding sequences or open reading frames in a genome, like the bacterial genome for E. coli, this analysis is showing you that, well, most of the time, the start codon is an ATG. The bigger the letter here, the more likely it is that that's going to be the base you see at that position. So, most start codons are ATG, but not all of them. Some start codons are actually GTG. Some start codons are T, TG. And then if you look at where the ribosome binds and the sequence it tends to like, it's much less deterministic. Many sequences can serve as valid start signals for protein synthesis. You'll have a lot of A's and G's. So the strongest one might be AGG, AGG, and you can kind of see that pattern in that hill, but it's not a deterministic situation. So what happens practically from an analytical perspective is you start to look for multiple clues coming together. It's as if you were a detective or a private investigator. It's like, well, I didn't see somebody commit the crime, but I got a little bit of indirect evidence over here and a little bit of other evidence over here that's circumstantial, and this looks pretty good. And I get enough different indications that something's happening, and I'll have increasing confidence that something might really be happening. So the analysis tools in biology and bioengineering sort of suffer from that oftentimes if we can't see the thing directly. Here's an advanced topic just to bounce back into that for a second. I was indicating that start codons here aren't always ATG? Well, a number, just a few years ago, we measured all 64 codons, could they make proteins? And it looks like they all can, but just to varying degrees. Meaning, every codon could be a start codon, just not as good a start codon as the conventional one, the AUG. Why am I telling you this if you're not already an expert. Well, a couple of things. First, bioengineering is operating on a frontier of analysis and design and our tools are meaning nobody understands perfectly how biology works. And so our tools can't possibly help us represent that perfectly. That means there's opportunity for better tools and hopefully we'll get to that at the end of the day. The other thing is when people talk about programming DNA, the word programming is dominated by the experience of software programming. And so here's a valid expression in C, the computer programming language. And if you typed out this thing and put return, you would expect it to work with 100 percent reliability. There's very few things you could put in the quotes there that would cause this print statement to not work. In bioengineering, we'd like to represent that there's something equivalent to that, that in a cell, if you put DNA encoding an expression cassette that would cause your favorite protein to be manufactured by the cell, getting this function to work from scratch is 50-50 likelihood. Maybe if you're really good, it's a 90% likelihood, meaning you put in the DNA code for your favorite protein, maybe 10% of the time it won't get made, or won't get made to the extent you wish it got made. And that's again, because our analysis tools and the reality of biology, the physics of biology are not artificially determined as in computer software to work all the time. And so there's that frontier of ignorance and opportunity in bioengineering. Let me pause, pop out of this. If you happen, we're gonna do a quick exercise. Wherever you are, I'd like you to, if you have a piece of scrap paper, find something you'd like to throw a paper airplane at and quickly make a paper airplane and throw it and hit the thing you're trying to hit, okay, across the room or something like that. So we're just gonna spend like 45 seconds on this, not very much time. So if you have the ability to make a paper airplane and find like the light switch across the room, please design and build a paper airplane and then test it by flying it. This is the engineering cycle, design, build, test, and let's go. Who can make a paper airplane and throw it across the room? We're just doing this exercise to give everybody directly or indirectly the experience of what it's like to analyze and design as a bioengineer.

So far, we've talked a little bit, just giving you a taste of nucleic acid as molecules and some of the tools. Let me turn to proteins.

In the pre-class for this week, there was a story about a project that was initiated as an undergraduate student project up at the University of Washington and this project was seeking to engineer a protein to treat gluten intolerance And Effectively what this project did was engineer an enzyme, a protein, to break down gluten in the diet so that you could ingest an enzyme, an engineered protein, and that would allow people who were intolerant to gluten to handle gluten in the diet, so to speak, incidental or accidental. What's interesting about this project is not only the protein engineering project, but the practical outcomes of the project. So, Ingrid, shown here, was one of the students involved. She since earned a PhD. Right from the student project, given its practical utility as a potential drug for the disease, they were able to get an investment agreement with a pharmaceutical company from raise money to start a professional team to bring this into clinical trials. And so the project that was done by students in 2011 becomes a company by 2017. And then if you follow this story, it's interesting, April 8th, 2020, so that's what, a couple weeks ago, the company was acquired for 330 million to bring it into the clinic. So I mentioned this because. You know, this might be typical in social or software based work, but it's neat to see an example where with a relatively small team, I think about 3030 staff, they were able to go from a student project to a pretty significant outcome that should help people as a medicine in about nine years. So maybe that's slow in some areas, but it's pretty nice that bioengineering, even with the tools we're about to explore, can pull that off. Okay, so back to Ingrid. So to make this therapy, this therapeutic molecule, they had to figure out how to achieve four design goals. And they're going to use tools to help them achieve these goals. They want the enzyme to degrade gluten, ideally in the pH of the stomach after a meal, so very low pH, pH of 2 to 4. The enzyme, they'd like it to not be digested easily, because if the enzyme that degrades gluten is digested, it won't be able to degrade gluten. So it needs to resist digestion by proteases. Three, you need to be able to make this protein that they've designed, this biomolecule. You have to be able to make it. You have to be able to manufacture it easily so that you can afford to make it and turn it into a pill or a supplement so that people can take it. for. They needed to have specificity for a certain motif. OK, now, if you want to see in great detail how they went about it, the link to the paper reporting their design work is at the bottom of the slide. So, again, if you want to level up and do advanced work, we are including that link for you. Here's a visual representation and a summary of what they did, and there's a lot of jargon here, so we're going to walk through it. And the next slide. To make this molecule, they start with an existing natural molecule. They're not building a biomolecule from scratch, they're starting with a scaffold, an enzyme that already works, and they're going to change it. And the way they're going to change it is they're going to make seven amino acid substitutions. They're going to change seven of the residues in that peptide that comprise the enzyme, the protein. The nomenclature across the bottom, V119D, S22262K and so on, that's biocode for what changes they're making. So they're changing the amino acid V at position 119 into the amino acid D, where the letters are the single letter abbreviations for the 20 amino acids. And so if you had the native enzyme and you had this set of seven changes at the bottom, you could tell what changes they made in order to produce the engineered enzyme.

Changing amino acids, what does that mean?

Well, you're changing the positioning of atoms in the molecule, but these amino acids have different properties. They could be hydrophobic, they could be tiny or big, they could be acidic, they could be charged or not. So by changing the amino acids, you can change both the chemical activity of the molecule, the protein, and also how things can fit into it, where that reaction might take place. So, this is just a cheat sheet, if you will, for how different amino acids have different chemical implications. So, now we come back to what they were doing. And the goal, summarized in somewhat plain English at the top, is to change a native enzyme that catalyzes digestion of collagen or, quote unquote, eats collagen to an engineered enzyme that catalyzes the digestion or cleavage of gluten. And to go from the collagen eater to the gluten eater, their solution, which they determined by computational design, is shown in this jargon again. So, for example, if we look at position in the middle, D293T, see that? If you go to the top left of the screen, you should be able to see a little yellow protuberance with two red ears. That's residue 293 on the native protein, and it's a D amino acid. That's what the side chain indicates. If you jump over to the same position on the right, they've changed that D to a T. It's very subtle, but the different amino acid has a different configuration of atoms. 291, just next to it, is changing from an N to a D, and so on. 262 changes from an S to a K. Now, what are we looking at here? What we're looking at here is a cartoon representation of the structure of the protein. So, this is a tool, because the protein, we can't see.

It's so tiny, right?

No foldscope will ever let us see the protein. This is a representation of how the atoms that comprise this protein, once you fold the polypeptide up into a three-dimensional structure, how they're configured in space, right? And so by using a protein analysis tool to give you a model of how the atoms are, you can begin to get a sense of what's going on. Just, excuse me, you can begin to get a sense of where things are. It's very, very hard to get a sense of what's going on. Is anybody able to tell me, for example, what the change from D at position 293 to T does by inspection, by looking at this cartoon representation? We know overall that these changes collectively turn the collagen-eating protein or collagen-digesting protein into a gluten-digesting protein. But can anybody elaborate or just explain to us how any of these changes pull this off?

Question about the notation of the protein. Do the blue and the red caps indicate charge? I'd have to be careful and double check what they're using for their color code here. Could be charge, could be atom. Can you go back to the image in particular? So red should represent oxygen atoms and blue should represent nitrogen atoms.

I don't want to belabor it, but I'm hitting you with the question just to again give you a sense of where these tools are on the frontier of bioengineering. So what's shown here in this bullet list are the designers' understanding of what these changes do. So, if I go down to the fourth sub-bullet, D293T likely introduces an interaction with other residues in the protein outside the catalytic site. So, it's somehow stabilizing the structure of the protein, maybe to make it less likely to be digested or operate at the low pH of the stomach after a meal. They're not claiming that. How are they coming up with these designs? Oh, that's interesting. So they're using a program, a piece of software that takes the sequence of amino acids and has a physics model for the most likely low energy state of the atoms in the polypeptide chain. And the computer program just tries to jiggle around and minimize the energetic state of the molecule, the most likely favorable thermodynamic state of the molecule as they're trying to get these different properties to show up. Practically, it's something that by itself the computer tool is not sufficient to guarantee a right answer. It's very much a tinker and then test in reality process. I'm gonna mention one tool that you'll see again as a very nice tool for looking at proteins, but we're not going to spend class time on it, called PyMOL. I'll summarize the workflow of the example we were just going through and then give you a simpler tool for looking at proteins that's nicely connected to structures of proteins. So, they're using modeling and simulation tools, Ingrid and her colleagues, to suggest mutations that would better bind the desired substrate motif found in gluten, which is itself a peptide, right, so the PQLP. They then are given a list of candidates coming out of the design tool. They make those by DNA synthesis, which we'll talk about later. They make the physical protein and then they experimentally test it out. So, you know, imagine writing computer software where, you know, you've got, you know, an integrated design environment that's kind of suggesting code that might work. And then you'll make a hundred versions of the program in parallel and see which ones work by testing them. That's probably not how most people design software because we have better tools for compile, check and navigating this process. But anyway, that's what's happening in this example and is typical, I would say, of biomolecular design for proteins. Let me give you just a visual exploration of a complementary tool for looking at proteins, both supporting analysis and design. So this is going to be the embedded viewer in what's known as the protein data bank. And what's amazing about this, if you look at it at the very top, you see they have over 100,000 biomolecular structures. This is a free database where anybody can go to and get access to the arrangement of atoms comprising proteins as they actually assemble into three dimensional objects.

So the the name of this molecule is here, ZIF-268 Zinc Figure DNA Complex. And what's cool about this is I've got a cartoon representation of how the atoms are arranged to make this object. The atomic structure is determined by measurement techniques such as X-ray crystallography or so on. And what we're looking at here are actually several molecules linked together by just how they fit together and how they interact physically and chemically. So right here in this orientation, if you can see the orange and green, we're looking down the interior of a double helix of DNA. So the orange and green are the backbones of DNA, double-stranded, and those little staircase pads are representations of the bases that are pairing with each other. So, we're going to line that up again like this. So, now we're looking down the backbone. And then, wrapped around the DNA is a cartoon of a protein called a zinc finger. This is a type of protein that can interact with specific DNA sequences. And you can see how that interaction might happen. You see the folds of the protein sort of looping around the groove of the DNA and slotting in there, almost like a lock and key mechanism, but at a molecular scale. Let me see if I can bring up another one. So, this is another DNA binding protein, so we should be able to see the DNA again. There, we're looking down the DNA, or we can see it this way. Right here is DNA in orange and green. And then this protein, make it a little bit bigger, this protein is actually what's called a dimer. So that means there's two copies of the protein. One is magenta and the other is purple or pale purple. And they're interacting with each other through this long zipper-like arm. This is called a leucine zipper. That's a set of amino acids that tend to homodimerize or interact. You see all these little specks, those are water molecules. So I'm just gonna, if you can see them, I'm just going to get rid of the water to clean this up. And the two leucine arms interact to make a zipper, and then these zinc fingers, again, like we were just looking at, are interacting with the grooves of DNA. So just by looking, you can begin to analyze how this molecule might be I think it's, for example, the regions down here that are coupled through the helix and the grooves in the helix of the DNA are gonna cause this protein to bind a particular sequence of DNA, which could be useful later. We could turn on gene expression by binding a particular sequence of DNA. Or maybe we could turn off gene expression by finding a particular sequence of DNA defined by the amino acids in the protein and what sequence they interact with. Similarly, by changing the leucine zipper, I can determine whether or not this protein is gonna bind with itself or binds with a different protein. So I might be able to use that if I had two different zippers to implement a Boolean logic function like AND. I have to have the magenta protein and I need to have the blue protein together at the same time in order to turn on gene expression. And maybe I can control how proteins interact and whether they interact or not by the amino acid sequence in this zipper region, if that makes sense. So simple analysis tools that just give you cartoon representations based on where the atoms actually are. I don't want to belittle that. It's amazing, are very helpful because they set the engineer up to design. And as soon as you can see where things are and imagine changing them, well, we can go back to the biocode and try it out. Again, just to be faithful and emphasize the point, I don't know of any perfect design tool that allows for the engineer to make a exact change on the computer and then that sequence of DNA. So encoding the molecule is guaranteed to work. Instead, it's always this tinker and test reality for now, at least. But maybe some of you could go on and make the perfect bio design tool. That's a lot to cover in one session.

Why did it take nine years to get the company started, from a student project to an acquisition, it was not that long to do the protein engineering and to show that you could have this engineered protein that would degrade gluten. But now you're talking about a human therapeutic. And so it has to be tested for two things. It has to be tested and shown to be safe, and it has to be shown to be efficacious. Right? And so that testing for safety and efficacy are not activities that even begin until after you have a molecule that looks like it's working, because that's gonna be expensive. So a lot of the latency in the process is testing for safety and efficacy. The other thing is you have to demonstrate that you can take it from a benchtop prototype that maybe you can make a little bit of and it kind of works. And now you need to be able to make it to treat everybody who needs it, right? So you might need to be able to make 100,000 or a million doses of the molecule. So testing for safety and efficacy and scale up are where a lot of the time goes. It's not, so it's stated differently. If you wanted to deploy a web service from your new app, there's Amazon Web Services, there's cloud computing, there's app stores, right? There's infrastructure that makes the scaling of a piece of software go to market very, very quickly. That infrastructure mostly doesn't exist in bioengineering. Since the questions come up, and I don't know we'll have a reason to do it later. I'll give you just one example for those who are sticking around via screen share. So this is a website of a company that was started by some graduates of Stanford's chemistry program and it's called Emerald Cloud Laboratory. And the way this works is you can access their laboratory remotely by running experiments through scripting, a scripting language, a web interface, and then they have a laboratory in the old South San Francisco mail sorting facility that will carry out the experimental results and then report back the data for your consideration. So, nothing like that's existed, you know, five years ago, and they're doing experiments around how would you just operate a laboratory that anybody could access through the web on the clouds, right? That's a great question, Sierra, and hopefully that gives you a taste of why it takes a little while. Yeah, thank you for answering that. And then do you know what percentage about of drugs that go into clinical trials, like what percentage won't get to go into market? About 80 percent of any drug that gets that far won't make it to market. Sometimes it's even more than that. It's a very difficult thing to go through the safety and the efficacy and come out the other end with a viable product.
