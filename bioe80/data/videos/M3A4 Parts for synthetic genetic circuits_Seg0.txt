Okay, let's talk about synthetic genetic circuits. Synthetic genetic circuits are artificial systems made of DNA that are designed to control and regulate the behavior of living cells. They work by taking advantage of the cell's natural gene expression control machinery to turn genes on and off in response to specific stimuli. Now, the arsenic biosensor I showed you is a simple synthetic genetic circuit. It runs a simple program, which determines if arsenic then express green fluorescent protein. This type of synthetic genetic circuit is called a buffer gate and its activity can be described by the truth table shown at the bottom of the slide. Truth tables are ways of demonstrating the, or showing the activity of a synthetic genetic circuit that does logic computation. I'm gonna walk you through this truth table because we're gonna show a bunch of these in this presentation and I want you to be comfortable looking at truth tables and familiar with what it is they're trying to tell you. So this truth table, again, describes the activity of a buffer gate. In the case of the arsenic biosensor, the input is arsenic and an input value of zero denotes no arsenic present in the water that you're trying to measure arsenic concentration in. And an input value of one is a toxic level of arsenic in the water. Now, the output is expression of green fluorescent protein. So when there's no arsenic, you should also have no green fluorescent protein. But when there is arsenic present in the water, you should produce green fluorescent protein. So your output value should be one when your input value is one. Okay, so that's a truth table for a type of synthetic genetic circuit called a buffer gate. And it, again, is a really simple type of synthetic genetic circuit, but it's powerful, right? It's enabling you to produce a bacteria that responds to a contaminant in the environment and produces a visible signal. Now, what if you want to make a slightly more complicated biosensor that responds to arsenic and lead in the water? Let's say you want it to produce green fluorescent protein in response to either of those two contaminants. Well, you could use a slightly more complicated synthetic genetic circuit to achieve this goal. The type of synthetic genetic circuit I would recommend using for this is called a logical OR gate. OR gates, again, respond to two inputs. And in this case, your inputs could be arsenic and lead. So A might be arsenic, B might be lead. Your output would still be a response, or would still be expression of GFP. So you should get GFP when either arsenic or lead or both are present in the water. So by just increasing the complexity of your synthetic genetic circuit a little bit, you now get a bacterium with a broader set of capability. Now, let's say instead of just detecting arsenic or lead in the water, you actually want to remediate or remove these contaminants from the water. You could potentially express a set of enzymes that produce a chelating molecule or something that removes the arsenic, let's say, from the water. An example of a molecule that can chelate arsenic is 2,3-dimeraptopropanol. This compound has a high amount of sulfur in it. And so you maybe don't want to be creating it all the time. And you might want to only be producing this compound when there's arsenic in the water and when there's a sufficient amount of sulfur in the water because otherwise you may be making enzyme that's not able to produce the chelating molecule. So you should, in this case, probably use a logical AND gate where your two inputs are arsenic and sulfur. Again, the sulfur is there so that you can produce enough of the dimeraptopropanol in order to chelate enough arsenic to be meaningful. And you should be expressing the enzymes that make that chelating compound only when there's arsenic and sulfur in the water. So by using a logical AND gate, you can get a sort of smart remediator, a smart cell that is able to start to remediate arsenic or work on remediating arsenic only when it's there and when there are enough resources there for the bacteria to do the remediation that you want it to do. Now, I just showed you a buffer gate, an OR gate and an AND gate, but there are actually even more types of logic gates that you can build into living organisms in order to control their behavior. There are 16 different two input logic gates that allow you to take two different inputs and determine what to do based on the presence of those two inputs. And you can build even higher order logic gates too, where you have, let's say, three inputs and you only produce your output gene when all three inputs are present in the environment. And so these types of logic gates are really powerful. They're only one type of synthetic genetic circuit too. I believe Professor Endy showed you some oscillators. That's a different type of dynamic synthetic genetic circuit. But what's true for all of these different synthetic genetic circuits is that there are many different ways to build them. And there are lots of biomolecules that you can take advantage of in order to construct a synthetic genetic circuit. So we're gonna talk on the next couple of slides about building logical AND gates. I'm gonna show you designs for four different type, for four different AND gates built with different types of biomolecules so you can get a sense for how bioengineers are thinking about creating synthetic genetic circuits inside of living cells. Okay, so this first AND gate is built with transcription factor and chaperone pairs. So the design of this AND gate uses two different inducible promoters. One promoter is turned on by the presence of arabinose. That's a type of sugar in the cell. And the other promoter is turned on by a type of antibiotic called tetracycline. And so when the arabinose promoter is activated, it turns on expression of a protein called SIC-A. SIC-A is a transcription factor that would bind a third promoter called P-SIC-A and initiate expression of the gene downstream of SIC-A. But SIC-A when it's produced is not folded correctly. For whatever reason, the bacteria is not able to fold it correctly. And so remember we talked about how protein structure is really important for function. Well, when it's not folded correctly, it can't bind the DNA and it can't initiate expression of the output gene, which is RFP, a red fluorescent protein. SIC-A needs a chaperone called INVF in order to fold correctly. So the second input, the tetracycline drives expression or initiates expression of INVF. This chaperone protein then helps SIC-A fold correctly. And it's only when you get both SIC-A and INVF expressed in the cell that you get a functional transcription factor that can then turn on this SIC-A promoter and initiate expression of your output gene RFP. So that's the design of this AND gate. Its activity was assayed in E. coli. And so in this graph, you can see increasing amounts of tetracycline along the bottom, and then increasing amounts of arabinose up the side. And you can get strong expression of RFP, your output gene, only when there is both a high concentration of arabinose and a high concentration of tetracycline in the E. coli cell. And so this is exciting. That means that type of AND gate built on transcription factor chaperone pairs is functional. It's not the only way to build an AND gate. You can actually take one transcription factor and split it in two and drive expression of one half of the transcription factor with one input promoter and the other half with another input promoter. So only when you then get expression in promoter A and promoter B that you get both halves of the transcription factor being made. Once both halves are made, they can bind together and activate an output promoter. And in this case, it's driving expression of a different fluorescent protein called cyan fluorescent protein. These are just different colors of fluorescent protein. The activity of this type of AND gate was assayed in a type of mammalian cell line called U2OS cells. So I think it's exciting that we're able to build AND gates with a different type of biomolecule, in this case, a split transcription factor, and in a different type of cell, a mammalian cell, which is very different from an E. coli bacterium. Okay, so you can also build AND gates with a special type of protein called a recombinase. Recombinases are proteins that invert segments of DNA. So the first recombinase in this AND gate design is BXB1. BXB1 expression is stimulated by a molecule called acyl homoserine lactone. So this is just a molecule you can add to the cell. When you add it to the cell, you get expression of BXB1. BXB1 then looks for its recognition sequences, which are segments of DNA in this cartoon indicated by little red arrows. When it finds the DNA that it likes, it recognizes, it will actually invert the part in the middle. And so the DNA in between these two recognition sequences is a terminator. The terminator will stop progression of RNA polymerase. So this promoter should be attracting RNA polymerase and then initiating transcription of an RNA. However, when the polymerase hits the terminator, it'll fall off and it won't be able to express the gene that's downstream, which is GFP here. So BXB1 will invert this terminator sequence and essentially allow the RNA polymerase to progress to GFP, or at least it would progress to GFP, except that this design has two terminators in it. The second terminator is flanked by recognition sequences for a different recombinase called 5C31. 5C31 expression is initiated by a antibiotic. And this is the same one as before, tetracycline. When 5C31 is expressed, it will invert the second terminator so that when you get expression of BXB1, which flips the first terminator and 5C31, which flips the second terminator, you can then get an RNA polymerase that is able to express or read through this segment of DNA and express your downstream gene GFP. So it's another way of building an AND gate inside of a living cell. This type of AND gate was tested in E. coli and found to function very well. The last type of AND gate that I'm gonna show you is built with proteins called proteases. These proteases cleave proteins. And so there's no transcriptional control in this case. A lot of, all three of the other circuits that I showed you, all three of the other AND gates were all dependent on changes in transcription in order to get changes in expression or GFP signal. In this case, we're going to have control at the level of protein stability. Okay, so a protease, again, cuts proteins at very specific sequences, very specific amino acid sequences. And the protein in this case is going to have GFP fused to a degradation tag and a Tev protease cut site, and then another protease cut site for HCV protease and another degradation tag. Now, these two degradation tags will cause GFP, the protein to be degraded really quickly. So you never see fluorescence signal in a cell, even though it's making GFP protein because the protein is so quickly chewed up. Now, the Tev protease is going to be expressed in response to your first input, and it will cut the protein just upstream of the GFP part so that it removes the degradation tag. It will essentially cut off this degradation tag. Your second input is going to be this HCV protease, and it will cut off the other degradation tag. So when you have both Tev protease and HCV protease expressed in your cell, you'll cut off both degradation tags and get a GFP signal. So in this case, you're going to be getting AND gate-like logic just by cutting a protein in specific locations. So this is just showing you fluorescence intensity in HEK293 cells. That's a type of human embryonic kidney cell line. So these are human cells. You can see strong GFP signal only when both your Tev protease and your HCV protease are expressed in the HEK cells. And so this type of AND gate is just another example of a logic gate or a genetic circuit being built with a biomolecule. What is true for all of these is actually that you can build diverse genetic circuits with the same tools. So the same kinds of protease tools can be used to build synthetic genetic circuits that perform other types of logic. This is a not AND gate. So it has actually exactly the opposite type of behavior as an AND gate where it's on in all cases, except where both Tev protease and HCV protease are expressed. There are, you know, implies, not implies, or exclusive or gates. There's all different types of logic gates that you can build using the same type of protease tools and using the same type of recombinase tools, you can build diverse types of logic gates as well. And so these different biomolecules lead to, can be used to build different types of synthetic genetic circuits. And through all of this, you may be wondering, what's a concrete example of where I would use a logic gate? Like, why would I go through the trouble of building these things? Well, one example is here. A synthetic genetic circuit can be used to increase cancer treatment specificity. So in this case, we're talking about a type of cancer treatment called a CAR-T. So these are T cells, which are immune cells that are activated to basically kill cancer cells within your body. We've engineered the T cells to recognize the cancer cells as foreign, and then start breaking them down. And the cancer, the T cell needs to be very specific and only start killing cancerous cells. Because if it starts killing other cells within your body, it can cause a lot of side effects and be potentially detrimental to your health. And so an AND gate can be implemented in order to help the T cell very specifically kill cancer cells by very specifically recognizing things that are only on the surface of cancer cells. And so by having three different input signals, the T cell is able to more specifically kill cancerous cell lines. And this graph on the right is just showing you that it's able to do this very specific targeted killing of cancer cell lines when it has a three input AND gate, or when the three input AND gate is used in T cells. We're gonna talk more about the mechanism of T cell-based or engineered T cell-based cancer therapies in our cancer week. But I just wanna show you that this type of three input AND gate can be useful for refining treatments, which is, I think, an exciting application. Okay, now tuning gene expression, changing how much transcription or translation is going on within a cell can change the behavior of a synthetic genetic circuit. Just wanna show you that with a really simple synthetic genetic circuit called a NOT gate, in this case, it is just flipping the buffer gate around. So if you have an inducible promoter, which we're denoting with this gray arrow here, that's turned on by something like tetracycline or arsenic, any of the inducible signals we showed before, instead of expressing a GFP signal, it will express a repressor. A repressor is a type of transcription factor that then turns off a promoter. And so if you turn off a promoter that's upstream of your output gene, in this case, a yellow fluorescent protein, then you'll get a transfer function or a response function that looks like this, where as you increase the amount of your input, let's say you increase the amount of arsenic present, then you will decrease the amount of observed fluorescent protein, as you increase the amount of input, you make more repressor, that repressor turns off your output. So you get something that looks like this. Now, what we care about in these types of synthetic genetic circuits are the dynamic range. What is the difference between the on state and the off state? You want a big dynamic range or a big difference between on and off for most biosensors or most synthetic genetic circuits, because if you produce, for example, just a little bit of fluorescent signal in response to arsenic, then it can be really difficult to see, is my bacteria fluorescing or is it not? Am I making, is there arsenic in the water? Is there not? Whereas if you get a really big signal, if you get a big dynamic range, a big difference between on and off states, then it's much more obvious that the bacteria has detected something in the environment that it's trying to tell you about. And then the other thing we care about is just the threshold, right? This is the point at which a genetic circuit switches from being on to being off or being off to being on. This you can think of as the threshold at which like there's a, the bacteria recognizes that there's arsenic in the water and starts responding to it. You can imagine that at a really low concentration of arsenic, maybe the bacteria can't even detect it. It can't even tell. And so that threshold is just where the switch point is from being on to being off. Now, if you change different parts of this NOT gate here, then the circuit will.